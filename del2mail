#!/usr/bin/env python
# encoding: utf-8

# configuration
USER = ''
TAG = 'geekinfo.ch'
MAIL_SERVER = 'localhost'
RECIPIENTS = ['members@geekinfo.ch']
SENDER = 'bbolli@ewanet.ch'


try:
    import json
except ImportError:
    # Python 2.5 and earlier need this package
    import simplejson as json
import urllib
import smtplib
import textwrap
from email.mime.text import MIMEText


class DeliciousToMail(object):

    def __init__(self):
        self.db_file = '/var/local/del2mail.latest'
        try:
            self.latest = open(self.db_file).read()
        except (IOError, OSError):
            self.latest = '2000-01-01'
        self.lw = textwrap.TextWrapper(initial_indent='* ', subsequent_indent='  ',
            break_long_words=False, break_on_hyphens=False
        )
        self.tw = textwrap.TextWrapper(initial_indent='  ', subsequent_indent='  ')

    def __del__(self):
        open(self.db_file, 'w').write(self.latest)

    def get_links(self):
        url = 'http://feeds.delicious.com/v2/json/%s/%s' % (USER or 'tag', TAG)
        links = json.loads(urllib.urlopen(url).read())
        return [l for l in links if l['dt'] > self.latest]

    def make_mail(self, link):
        mail = self.lw.fill('%(d)s: %(u)s' % link)
        if link.get('n'):
            mail += '\n\n' + self.tw.fill(link['n'])
        return mail

    def run(self):
        links = self.get_links()
        if not links:
            return

        if 'a' not in links[0]:
            print links
            return

        user = links[0]['a']
        body = ('\n\n'.join(self.make_mail(l) for l in links)).strip() + """

-- 
Mehr Links von mir: http://delicious.com/%s
""" % user

        msg = MIMEText(body.encode('utf-8'))
        msg.set_charset('utf-8')
        msg['Subject'] = "Neuste Links"
        msg['From'] = '%s (%s)' % (SENDER, user)
        msg['To'] = ', '.join(RECIPIENTS)

        smtp = smtplib.SMTP(MAIL_SERVER)
        smtp.sendmail(SENDER, RECIPIENTS, msg.as_string())
        smtp.quit()
        self.latest = max(l['dt'] for l in links)


if __name__ == '__main__':
    DeliciousToMail().run()
